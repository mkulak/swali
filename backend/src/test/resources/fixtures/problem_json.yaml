swagger: '2.0'
info:
  title: Test Problem JSON
  description: Problem JSON test
  version: "1.0.0"
host: problemjson.example.com

produces:
  - application/json
paths:
  /products:
    head:
      summary: Check Products
      responses:
        200:
          description: Products are found
        404:
          description: No products are found
    options:
      summary: Get available methods
      responses:
        404:
          description: No available methods found
    get:
      summary: Product Types
      description: |
        The Products endpoint returns information about the products
        offered at a given location. The response includes the display name
        and other details about each product, and lists the products in the
        proper display order.
      parameters:
        - name: latitude
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
      tags:
        - Products
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        400:
          description: Bad Request
          schema:
            $ref: 'https://zalando.github.io/problem/schema.yaml#/Problem'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ComposedProblem'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/CopiedProblem'
        404:
          description: Not Found
          schema:
            type: object
            properties:
              type:
                type: string
                format: uri
                description: |
                  An absolute URI that identifies the problem type.  When dereferenced,
                  it SHOULD provide human-readable documentation for the problem type
                  (e.g., using HTML).
                default: 'about:blank'
                example: 'https://zalando.github.io/problem/constraint-violation'
              title:
                type: string
                description: |
                  A short, summary of the problem type. Written in english and readable
                  for engineers (usually not suited for non technical stakeholders and
                  not localized); example: Service Unavailable
              status:
                type: integer
                format: int32
                description: |
                  The HTTP status code generated by the origin server for this occurrence
                  of the problem.
                minimum: 100
                maximum: 600
                exclusiveMaximum: true
                example: 503
              detail:
                type: string
                description: |
                  A human readable explanation specific to this occurrence of the
                  problem.
                example: Connection to database timed out
              instance:
                type: string
                format: uri
                description: |
                  An absolute URI that identifies the specific occurrence of the problem.
                  It may or may not yield further information if dereferenced.
              extended_description:
                type: string
                format: uri
                description: Custom extended description
        405:
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/MinimalProblem'
        default:
          description: Unexpected error
          schema:
            $ref: 'https://zalando.github.io/problem/schema.yaml#/Problem'

definitions:
  Product:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.

  ComposedProblem:
    allOf:
      - $ref: 'https://zalando.github.io/problem/schema.yaml#/Problem'
      - properties:
          extended_description:
            type: string
            description: Extended description

  CopiedProblem:
    type: object
    properties:
      type:
        type: string
        format: uri
        description: |
          An absolute URI that identifies the problem type.  When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        default: 'about:blank'
        example: 'https://zalando.github.io/problem/constraint-violation'
      title:
        type: string
        description: |
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
      status:
        type: integer
        format: int32
        description: |
          The HTTP status code generated by the origin server for this occurrence
          of the problem.
        minimum: 100
        maximum: 600
        exclusiveMaximum: true
        example: 503
      detail:
        type: string
        description: |
          A human readable explanation specific to this occurrence of the
          problem.
        example: Connection to database timed out
      instance:
        type: string
        format: uri
        description: |
          An absolute URI that identifies the specific occurrence of the problem.
          It may or may not yield further information if dereferenced.
      extended_description:
        type: string
        format: uri
        description: Custom extended description

  MinimalProblem:
    type: object
    properties:
      title:
        type: string
        description: |
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
      status:
        type: integer
        format: int32
        description: |
          The HTTP status code generated by the origin server for this occurrence
          of the problem.
        minimum: 100
        maximum: 600
        exclusiveMaximum: true
        example: 503
