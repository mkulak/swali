swagger: "2.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
host: petstore.swagger.io
basePath: /v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: An paged array of pets
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Pets'
        "404":
          description: asas
          schema:
            type: array
            items:
              type: object
              properties:
                some_value:
                  type: integer
        "402":
          description: asas
          schema:
            $ref: '#/definitions/Names'
            
        default:
          description: unexpected error
          schema:
            type: array
            items:
              $ref: '#/definitions/PetName'
    post:
      summary: Create a pet
      operationId: createPets
      parameters:
        - $ref: '#/parameters/NameParam'
      tags:
        - pets
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          type: string
          
        - $ref: '#/parameters/NoLimit'

      responses:
        200:
          description: Expected response to a valid request
          schema:
            type: object
            required:
              - color
            properties:
              color:
                  type: string
              size:
                  type: object
                  properties:
                    size_grid:
                      type: string
                    size_value:
                      type: integer
              pet:
                $ref: '#/definitions/Pet'
              names:
                type: array
                items:
                  $ref: '#/definitions/PetName'
              owners:
                  type: array
                  items:
                    type: object
                    required:
                      - some_field
                    properties:
                      some_field:
                        type: integer

        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

parameters:
  NoLimit:
    name: no_limit
    in: body
    description: How many items to return at one time (max 100)
    required: false
    schema:
      type: object
      properties:
        limit:
          type: string
        limit_desc:
          type: object
          properties:
            long_desc:
              type: string
            limit_code:
              type: integer
        importance:
          $ref: '#/definitions/Importance'


  NameParam:
    name: name
    in: body
    schema:
      $ref: '#/definitions/NameForParam'



definitions:
  Pet:
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        $ref: '#/definitions/PetName'
      tag:
        type: string

  Pets:
    type: array
    items:
      $ref: '#/definitions/Pet'

  Names:
    type: array
    items:
      type: object
      properties:
        name_value:
          type: string

  PetName:
    required:
      - first_name
    properties:
      first_name:
          type: string
      last_name:
          type: object
          properties:
            first_part:
              type: string
            second_part:
              type: string
      middle_name:
        type: array
        items:
          type: object
          properties:
            value:
              type: string
      nicknames:
        type: array
        items:
          $ref: '#/definitions/Nickname'

  Nickname:
    properties:
      value:
        type: string

  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

  NameForParam:
    type: object
    properties:
      first:
        type: string

  Importance:
    type: object
    properties:
      level:
        type: integer