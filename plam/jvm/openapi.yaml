openapi: 3.0.2
info:
  title: File store service API
  description: >
    Allows to store and retrieve files
  contact:
    email: kleshney@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: /api/v3 # TODO
paths:
  /files/{fileKey}:
    post:
      summary: get url for file uploading
      operationId: getUploadUrl
      parameters:
        - $ref: "#/components/parameters/FileKey"
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/UploadRequest'
#        required: true
      responses:
        "200":
          description: returns url for uploading file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        default:
          description: error occured
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: get public url for downloading the file
      operationId: getDownloadUrl
      parameters:
        - $ref: "#/components/parameters/FileKey"
      responses:
        "200":
          description: returns url for downloading file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        default:
          description: error occured
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /files:
    get:
      summary: list all files
      operationId: getFileList

components:
  parameters:
    FileKey:
      name: fileKey
      in: path
      description: id of the file
      required: true
      schema:
        type: string

  schemas:
    UploadRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
      xml:
        name: order
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      xml:
        name: customer
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
